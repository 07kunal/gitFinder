{"ast":null,"code":"import axios from \"axios\"; // setting up the url/context\n\nconst GITHUB_URL = process.env.REACT_APP_GITHUB_URL;\nconst GITHUB_TOKEN = process.env.REACT_APP_GITHUB_TOKEN; // created the instance for the axios .. \n\nconst github = axios.create({\n  baseURL: GITHUB_URL,\n  headers: {\n    Authorization: `token ${GITHUB_TOKEN}`\n  }\n}); // Get the search result from the end-point of api \n\nexport const searchUsers = async text => {\n  // params as an object to search for the specific search item\n  const params = new URLSearchParams({\n    q: text\n  }); //in axios we don't need to convert fetch data into json typ\n\n  const response = await github.get(`/search/users?${params}`);\n  return response.data.items;\n}; // Get user and repos\n\nexport const getUserAndRepos = async login => {\n  //making two request we can use the promise.all (cause we need all getUser and getUserRepos)\n  const [user, repos] = await Promise.all([// array of request can be here\n  github.get(`/users/${login}`), github.get(`/users/${login}/repos`)]);\n  return {\n    user: user.data,\n    repos: repos.data\n  };\n};","map":{"version":3,"names":["axios","GITHUB_URL","process","env","REACT_APP_GITHUB_URL","GITHUB_TOKEN","REACT_APP_GITHUB_TOKEN","github","create","baseURL","headers","Authorization","searchUsers","text","params","URLSearchParams","q","response","get","data","items","getUserAndRepos","login","user","repos","Promise","all"],"sources":["D:/react-tutorial/React-tutorial/App-4/git-finder/src/context/github/GithubAction.js"],"sourcesContent":["import axios from \"axios\"\r\n// setting up the url/context\r\n\r\nconst GITHUB_URL = process.env.REACT_APP_GITHUB_URL\r\nconst GITHUB_TOKEN = process.env.REACT_APP_GITHUB_TOKEN\r\n\r\n\r\n// created the instance for the axios .. \r\nconst github = axios.create({\r\n    baseURL: GITHUB_URL,\r\n    headers: { Authorization: `token ${GITHUB_TOKEN}` }\r\n})\r\n\r\n// Get the search result from the end-point of api \r\nexport const searchUsers = async (text) => {\r\n\r\n\r\n    // params as an object to search for the specific search item\r\n    const params = new URLSearchParams({\r\n        q: text\r\n    })\r\n\r\n    //in axios we don't need to convert fetch data into json typ\r\n    const response = await github.get(`/search/users?${params}`)\r\n    return response.data.items\r\n\r\n\r\n\r\n}\r\n// Get user and repos\r\nexport const getUserAndRepos = async (login) => {\r\n    //making two request we can use the promise.all (cause we need all getUser and getUserRepos)\r\n    const [user, repos] = await Promise.all([\r\n        // array of request can be here\r\n        github.get(`/users/${login}`),\r\n        github.get(`/users/${login}/repos`)\r\n    ])\r\n    return { user:user.data , repos: repos.data }\r\n}"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AAEA,MAAMC,UAAU,GAAGC,OAAO,CAACC,GAAR,CAAYC,oBAA/B;AACA,MAAMC,YAAY,GAAGH,OAAO,CAACC,GAAR,CAAYG,sBAAjC,C,CAGA;;AACA,MAAMC,MAAM,GAAGP,KAAK,CAACQ,MAAN,CAAa;EACxBC,OAAO,EAAER,UADe;EAExBS,OAAO,EAAE;IAAEC,aAAa,EAAG,SAAQN,YAAa;EAAvC;AAFe,CAAb,CAAf,C,CAKA;;AACA,OAAO,MAAMO,WAAW,GAAG,MAAOC,IAAP,IAAgB;EAGvC;EACA,MAAMC,MAAM,GAAG,IAAIC,eAAJ,CAAoB;IAC/BC,CAAC,EAAEH;EAD4B,CAApB,CAAf,CAJuC,CAQvC;;EACA,MAAMI,QAAQ,GAAG,MAAMV,MAAM,CAACW,GAAP,CAAY,iBAAgBJ,MAAO,EAAnC,CAAvB;EACA,OAAOG,QAAQ,CAACE,IAAT,CAAcC,KAArB;AAIH,CAdM,C,CAeP;;AACA,OAAO,MAAMC,eAAe,GAAG,MAAOC,KAAP,IAAiB;EAC5C;EACA,MAAM,CAACC,IAAD,EAAOC,KAAP,IAAgB,MAAMC,OAAO,CAACC,GAAR,CAAY,CACpC;EACAnB,MAAM,CAACW,GAAP,CAAY,UAASI,KAAM,EAA3B,CAFoC,EAGpCf,MAAM,CAACW,GAAP,CAAY,UAASI,KAAM,QAA3B,CAHoC,CAAZ,CAA5B;EAKA,OAAO;IAAEC,IAAI,EAACA,IAAI,CAACJ,IAAZ;IAAmBK,KAAK,EAAEA,KAAK,CAACL;EAAhC,CAAP;AACH,CARM"},"metadata":{},"sourceType":"module"}