{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-tutorial\\\\React-tutorial\\\\App-4\\\\git-finder\\\\src\\\\context\\\\github\\\\GithubContext.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useReducer } from \"react\";\nimport githubReducer from \"./GithubReducer\"; // variable to create this \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GithubContext = /*#__PURE__*/createContext(); // setting up the url/context\n// MAKING A export provider function\n\nexport const GithubProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  //make an object as \n  const initialState = {\n    //for different user\n    users: [],\n    // for specific user\n    user: {},\n    // user repos\n    repos: [],\n    // loading:true,\n    loading: false\n  }; //creating the reducer \n\n  const [state, dispatch] = useReducer(githubReducer, initialState);\n  return /*#__PURE__*/_jsxDEV(GithubContext.Provider, {\n    value: { ...state,\n      dispatch // searchUsers,\n      // getUser,\n      // getUserRepos,\n      // clearUsers,\n\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 12\n  }, this);\n};\n\n_s(GithubProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = GithubProvider;\nexport default GithubContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"GithubProvider\");","map":{"version":3,"names":["createContext","useReducer","githubReducer","GithubContext","GithubProvider","children","initialState","users","user","repos","loading","state","dispatch"],"sources":["D:/react-tutorial/React-tutorial/App-4/git-finder/src/context/github/GithubContext.js"],"sourcesContent":["import { createContext, useReducer } from \"react\";\r\nimport githubReducer from \"./GithubReducer\";\r\n\r\n// variable to create this \r\nconst GithubContext = createContext();\r\n\r\n// setting up the url/context\r\n\r\n\r\n// MAKING A export provider function\r\nexport const GithubProvider = ({ children }) => {\r\n\r\n    //make an object as \r\n    const initialState = {\r\n        //for different user\r\n        users: [],\r\n        // for specific user\r\n        user: {},\r\n        // user repos\r\n        repos:[],\r\n        // loading:true,\r\n        loading: false,\r\n\r\n    }\r\n\r\n    //creating the reducer \r\n    const [state, dispatch] = useReducer(githubReducer, initialState)\r\n\r\n    \r\n   \r\n\r\n\r\n\r\n    return <GithubContext.Provider value={{\r\n    ...state,\r\n    dispatch,\r\n        // searchUsers,\r\n        // getUser,\r\n        // getUserRepos,\r\n        // clearUsers,\r\n\r\n\r\n    }}>\r\n        {children}\r\n    </GithubContext.Provider>\r\n}\r\n\r\nexport default GithubContext "],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,UAAxB,QAA0C,OAA1C;AACA,OAAOC,aAAP,MAA0B,iBAA1B,C,CAEA;;;AACA,MAAMC,aAAa,gBAAGH,aAAa,EAAnC,C,CAEA;AAGA;;AACA,OAAO,MAAMI,cAAc,GAAG,QAAkB;EAAA;;EAAA,IAAjB;IAAEC;EAAF,CAAiB;EAE5C;EACA,MAAMC,YAAY,GAAG;IACjB;IACAC,KAAK,EAAE,EAFU;IAGjB;IACAC,IAAI,EAAE,EAJW;IAKjB;IACAC,KAAK,EAAC,EANW;IAOjB;IACAC,OAAO,EAAE;EARQ,CAArB,CAH4C,CAe5C;;EACA,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,UAAU,CAACC,aAAD,EAAgBI,YAAhB,CAApC;EAOA,oBAAO,QAAC,aAAD,CAAe,QAAf;IAAwB,KAAK,EAAE,EACtC,GAAGK,KADmC;MAEtCC,QAFsC,CAGlC;MACA;MACA;MACA;;IANkC,CAA/B;IAAA,UAUFP;EAVE;IAAA;IAAA;IAAA;EAAA,QAAP;AAYH,CAnCM;;GAAMD,c;;KAAAA,c;AAqCb,eAAeD,aAAf"},"metadata":{},"sourceType":"module"}